name: 🌟 Create new role repo

on:
  workflow_dispatch:
    inputs:
      role_name:
        type: string
        required: true

env:
  ANSIBLE_GALAXY_TOKEN: ${{ secrets.GALAXY_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.REPO_CTRL_TOKEN }}
  TEMPLATE_NAME: "ansible-role-template"  # TODO set from repo name
  TEMPLATE_STATE_VAR: "ansible_role_template_state"
  TARGET_REPO_NAME: "ansible-${{ inputs.role_name }}"
  TARGET_REPO: "philnewm/ansible-${{ inputs.role_name }}"
  ROLE_REPO_LIST: ${{ vars.ROLE_REPO_LIST }}
  ROLE_NAME: ${{ inputs.role_name }}
  TEMPLATE_REPO: "philnewm/ansible-role-template"

jobs:
  create-repo:
    runs-on: ubuntu-latest

    steps:
      - name: ⭐ Create new Repo `${{ env.TARGET_REPO }}` from template `${{ env.TEMPLATE_REPO }}`
        run: |
          gh repo create ${{ env.TARGET_REPO }} --template ${{ env.TEMPLATE_REPO }} --public
          echo "::notice::Created repository '${{ env.TARGET_REPO }}' from template '${{ env.TEMPLATE_REPO }}'"

      - name: 👑 Get repo owner
        id: query-owner
        run: |
          repo_owner=$(gh repo view philnewm/ansible-gnome --json owner --jq '.owner.login')
          echo "repo_owner=$repo_owner" >> $GITHUB_OUTPUT

      - name: 🫂 Add ${{ github.actor }} as repo collaborator
        if: steps.query-owner.outputs.repo_owner != github.actor
        run: |
          gh api --method PUT \
            -H "Accept: application/vnd.github.v3+json" \
            "/repos/${{ env.TARGET_REPO }}/collaborators/${{ github.actor }}" \
            -f permission=admin

      - name: 🤐 Set repo secrets
        run: |
          gh secret set ANSIBLE_GALAXY_TOKEN --body "${{ env.ANSIBLE_GALAXY_TOKEN }}" --repo ${{ env.TARGET_REPO }}

  update-role-repo-list:
    runs-on: ubuntu-latest
    needs: create-repo

    steps:
      - name: ➕ Append new repo to list
        id: update_list
        run: |
          current_list="${{ env.ROLE_REPO_LIST }}"

          # Add a comma if the list is not empty, then append the new repo name
          if [[ -n "$current_list" && "$current_list" != *"," ]]; then
            current_list="${current_list},"
          fi

          updated_list="${current_list}${{ env.TARGET_REPO_NAME }}"
          echo "updated_list=$updated_list" >> $GITHUB_OUTPUT

      - name: 💾 Set updated ROLE_REPO_LIST
        run: |
          gh variable set ROLE_REPO_LIST --repo "${{ github.repository }}" --body "${{ steps.update_list.outputs.updated_list }}"


  update-names:
    runs-on: ubuntu-latest
    needs: create-repo

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPO }}
          token: ${{ env.GITHUB_TOKEN }}

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq

      - name: Update meta role name
        run: |
          yq e '.galaxy_info.role_name = "${{ inputs.role_name }}"' -i meta/main.yml

      - name: 📂 Replace template name in readme
        run: |
          TEMPLATE_NAME="${{ env.TEMPLATE_NAME }}"
          NEW_NAME="${{ inputs.role_name }}"
          NEW_ROLE_NAME="${NEW_NAME^}-Role"

          sed -i "s/$TEMPLATE_NAME/$NEW_ROLE_NAME/g" "README.md"

      - name: ✅ Commit Changes
        run: |
          git config --local user.name "${{ github.actor }}"
          git config --local user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git add .
          git commit -m "Updated template name to ${{ env.ROLE_NAME }}"
          git push
